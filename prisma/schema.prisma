// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo para los pacientes (Historias Clínicas)
model Patient {
  id                      String   @id @default(cuid())
  // --- Información Personal ---
  surnames                String
  names                   String
  identification_number   String   @unique
  nationality             String
  birth_date              DateTime
  // --- Edad Cronológica (se puede calcular, pero la guardamos por conveniencia) ---
  chronological_age       Int
  gender                  String
  birth_place             String?
  marital_status          String?
  occupation              String?
  // --- Contacto y Dirección ---
  address                 String?
  country                 String?
  state_province          String?
  city                    String?
  phone_number            String?
  email                   String?  @unique
  // --- Otros ---
  history_date            DateTime @default(now())
  photo_url               String?
  blood_type              String?
  general_observations    String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  // --- Relaciones ---
  // Un paciente puede tener muchos tests biofísicos
  biophysics_tests        BiophysicsTest[]
}

// Modelo para guardar cada test biofísico realizado
model BiophysicsTest {
  id                  String     @id @default(cuid())
  patientId           String
  // --- Edades ---
  chronological_age   Int
  biological_age      Float
  differential_age    Float
  // --- Datos del Formulario ---
  // Guardamos todos los valores relativos y absolutos en un objeto JSON
  form_data           Json
  createdAt           DateTime   @default(now())

  // --- Relación ---
  patient             Patient    @relation(fields: [patientId], references: [id])
}

// Modelo para los rangos de edad (ej. 21-28 años)
model Range {
  id        Int      @id @default(autoincrement())
  min       Int
  max       Int
  createdAt DateTime @default(now())
  // --- Relación ---
  boards    Board[]
}

// Modelo para los baremos de cálculo (la lógica principal)
model Board {
  id        Int      @id @default(autoincrement())
  rangeId   Int
  type      Int // 1: Biofísica
  name      String
  min_val   String
  max_val   String
  inverse   Boolean  @default(false)
  createdAt DateTime @default(now())

  // --- Relación ---
  range     Range    @relation(fields: [rangeId], references: [id])
}
